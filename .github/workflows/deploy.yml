name: Deploy

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  appengine:
    name: App Engine
    runs-on: ubuntu-latest
    if: false
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        id: auth
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: app-engine-java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Replace database secrets and other placeholders
        run: |
          sed -i 's/$CLOUDSQL_USERNAME/${{ secrets.CLOUDSQL_USERNAME }}/g' src/main/resources/application-cloudsql.properties
          sed -i 's/$CLOUDSQL_PASSWORD/${{ secrets.CLOUDSQL_PASSWORD }}/g' src/main/resources/application-cloudsql.properties
          sed -i 's/$CLOUDSQL_CONN_NAME/${{ secrets.CLOUDSQL_CONN_NAME }}/g' src/main/resources/application-cloudsql.properties
          sed -i 's/$CLOUDSQL_DB_NAME/${{ secrets.CLOUDSQL_DB_NAME }}-${{ github.ref_name == 'main' && 'prod' || 'staging' }}/g' src/main/resources/application-cloudsql.properties
          sed -i 's/$APPENGINE_SERVICE_NAME/spring-${{ github.ref_name == 'main' && 'prod' || 'staging' }}/g' src/main/appengine/app.yaml
      - name: Build with Maven
        run: mvn package -B -DskipTests
      - name: Deploy to App Engine
        run: mvn appengine:deploy -B "-DcloudSdkHome=$(dirname $(dirname $(which gcloud)))" "-Dapp.deploy.projectId=${{ secrets.GCP_PROJECT_ID }}"
